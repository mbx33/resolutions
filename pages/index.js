import { useState } from 'react';
import Head from 'next/head';
import styled from 'styled-components';
import { useUser, useSupabaseClient, useSession } from '@supabase/auth-helpers-react';

// Components
import IntroForm from '../components/introduction/IntroForm';
import Introduction from '../components/introduction/Introduction';
import Navbar from '../components/navigation/Navbar';

function timeOut(ms) {
	return new Promise((resolve) => setTimeout(resolve, ms));
}

export default function Home() {
	const supabase = useSupabaseClient();
	const [message, setMessage] = useState('');
	const [error, setError] = useState(false);
	const [showNext, setShowNext] = useState(false);

	const onSubmit = async (e) => {
		e.preventDefault();

		if (!e.target[0].checked) {
			setError(true);
			setMessage('You must accept the privacy policy to continue.');
			timeOut(3000).then(() => setMessage(''));
			return;
		}

		setError(false);
		setMessage('Thank you for accepting the privacy policy.');
		timeOut(3000).then(() => setMessage(''));
		setShowNext(true);
	};

	return (
		<>
			<Head>
				<title>Resolutions</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Main>
				<NavContainer>
					<Navbar />
				</NavContainer>
				<Container>
					{showNext ? <Introduction /> : <IntroForm onSubmit={onSubmit} />}

					<div className="message">
						<p className={error ? 'error' : 'success'}>{message}</p>
					</div>
				</Container>
			</Main>
		</>
	);
}

const Main = styled.main`
	min-height: 300vh;
	background-color: hsl(0, 0%, 10%);
`;

const NavContainer = styled.div`
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	z-index: 100;
`;

const Container = styled.div`
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	gap: 3rem;
	background-color: green;
	color: white;
	padding: 2rem 3.5rem;
	border-radius: 0.5rem;
	width: 80%;

	.error {
		font-size: 1.2rem;
		color: hsl(0, 0%, 0%);
	}
	.success {
		font-size: 1.2rem;
		color: hsl(100, 100%, 0%);
	}
`;

// F)_Q2m-=q#=#QRs
